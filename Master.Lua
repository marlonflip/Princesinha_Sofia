-- This file was generated using Luraph Obfuscator v13.4.5

return(function(p8,l8,wt,K8,c8,U8,Ft,m8,H8,k8,Nt,u8,r8,at,X8,a8,t8,C8,I8,x8,w8,Y8,y8,B8,P8,A8,xt,h8,g8,W8,v8,D8,V8,i8,Et,s8,j8,O8,z8,f8,J8,o8,It,R8,n8,T8,q8,L8,b8,M8,Q8,d8,Zt,e8,Gt,S8,...)local G=I8;local K,H=x8,(w8 or S8[U8]);local Q,C,T,z=Q8[C8],Q8[T8],z8,W8;local w=Q8[l8];local a,I=K8,(H8);local U=(Q8[b8]);local Z,F,E=L8,j8,(R8);local S=M8;local W,l=h8,A8;local V,b=X8,D8;local L=(b and b()or e8);local G8=0;local j=B8;do repeat if G8~=0 then do j={};end;G8=2;else G8=1;end;until G8>1;end;local R,M,h,A,X=B8,B8,B8,B8,(B8);for fB=0,5 do if not(fB<=2)then if not(fB<=3)then if fB~=4 then A=Q(a8(A,5),u8,function(Rr)if w(Rr,2)~=72 then local T1=(B8);local V1=1;while V1~=2 do if V1~=0 then T1=S(E(Rr,16));V1=0;else if X then local wu=B8;do for KN=0,1 do if KN~=0 then X=B8;else wu=U(T1,X);end;end;end;return wu;else return T1;end;do V1=2;end;end;end;else local NS=(1);do repeat if NS~=0 then X=E(a8(Rr,1,1));NS=0;else return s8;end;until(i8);end;end;end);else end;else A=g8;end;else if fB<=0 then R=1;else if fB~=1 then else end;end;end;end;local D=(function()local Yt,Wt=2,(B8);repeat if not(Yt<=0)then if Yt==1 then do return Wt;end;else Wt=w(A,R,R);Yt=0;end;else R=R+1;Yt=1;end;until(i8);end);local e=(function()local GW,DW,vW,WW=w(A,R,R+3);for VF=0,1 do if VF~=0 then return WW*16777216+vW*65536+DW*256+GW;else do R=R+4;end;end;end;end);local B=2147483648;G8=5;local g,u,s,i,f,o,p,t=B8,B8,B8,B8,B8,B8,B8,(B8);while G8<=8 do if not(G8<=3)then do if not(G8<=5)then if not(G8<=6)then if G8~=7 then do s=g-1;end;do G8=3;end;else do p=function()local h4,F4=B8,(B8);local D4=(1);while(f8)do if D4~=0 then h4=e();D4=0;else F4=e();do break;end;end;end;if not(h4==0 and F4==0)then else do return 0;end;end;local q4=((-1)^f(31,F4,1));local Z4=(f(20,F4,11));local J4=(f(0,F4,20)*g+h4);local W4=B8;for t1=0,1 do if t1~=0 then if Z4==0 then do if J4~=0 then local HR=0;while HR~=2 do if HR~=0 then W4=0;HR=2;else Z4=1;HR=1;end;end;else return q4*0;end;end;elseif Z4~=2047 then else if J4~=0 then return q4*(1/0);else do return q4*(0/0);end;end;end;else W4=1;end;end;return q4*(2^(Z4-o8))*(J4/u+W4);end;end;G8=2;end;else do local TS,vS=0,B8;do while TS~=2 do if TS~=0 then for rq=1,31 do(i)[rq]=vS;do vS=vS*2;end;end;TS=2;else vS=2;do TS=1;end;end;end;end;end;G8=0;end;else if G8==4 then o=function()local x_,A_=e(),e();do if not(A_>=B)then else do A_=A_-g;end;end;end;do return A_*g+x_;end;end;G8=7;else do g=4294967296;end;do G8=1;end;end;end;end;else if not(G8<=1)then do if G8~=2 then do i={[0]=1};end;G8=6;else t={[0]={[0]=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15},{[0]=1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14},{[0]=2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13},{[0]=3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12},{[0]=4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11},{[0]=5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10},{[0]=6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9},{[0]=7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8},{[0]=8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7},{[0]=9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6},{[0]=10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5},{[0]=11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4},{[0]=12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3},{[0]=13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2},{[0]=14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1},{[0]=15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0}};G8=9;end;end;else do if G8~=0 then u=2^52;G8=8;else f=function(nv,qv,Jv)local lv=(qv/i[nv])%i[Jv];for S4=0,1 do do if S4~=0 then return lv;else do lv=lv-lv%1;end;end;end;end;end;G8=4;end;end;end;end;end;local n=(p8 or t8);local d=n and n[n8]or function(xp,Mp)do xp=xp%g;end;Mp=Mp%g;local Rp,Ip=1,B8;for TS=0,2 do if TS<=0 then do Ip=0;end;else if TS~=1 then return Ip+xp*Rp+Mp*Rp;else while xp>0 and Mp>0 do local o9,N9,d9=5,B8,(B8);do while(f8)do if not(o9<=2)then if not(o9<=3)then if o9~=4 then do N9=xp%16;end;do o9=4;end;else do d9=Mp%16;end;o9=1;end;else xp=(xp-N9)/16;o9=2;end;else if not(o9<=0)then if o9~=1 then do Mp=(Mp-d9)/16;end;o9=0;else Ip=Ip+t[N9][d9]*Rp;o9=3;end;else Rp=Rp*16;break;end;end;end;end;end;end;end;end;end;local c=n and n[d8]or function(Ox,Xx)local Vx=(1);while Vx<2 do if Vx~=0 then Ox=Ox%g;do Vx=0;end;else Xx=Xx%g;Vx=2;end;end;do return((Ox+Xx)-d(Ox,Xx))/2;end;end;local q=(n and n[c8]or function(x5,v5)local h5=2;repeat do if not(h5<=0)then do if h5~=1 then x5=x5%g;h5=0;else do return s-c(s-x5,s-v5);end;end;end;else v5=v5%g;h5=1;end;end;until(i8);end);local P=(n and n[q8]);local y,O=n and n[y8]or function(VP)return s-(VP%g);end,(n and n[O8]);do G8=1;end;while G8<2 do if G8==0 then P=P or function(Kv,nv)local sv=B8;for V_=0,3 do if V_<=1 then do if V_~=0 then if nv<0 then return O(Kv,-nv);end;else if not(nv>=32)then else return 0;end;end;end;else if V_==2 then sv=(Kv%g/i[nv]);else return sv-sv%1;end;end;end;end;do G8=2;end;else O=O or function(Cl,wl)do for QG=0,1 do if QG~=0 then if not(wl<0)then else do return P(Cl,-wl);end;end;else if not(wl>=32)then else return 0;end;end;end;end;do return(Cl*i[wl])%g;end;end;G8=0;end;end;G8=0;local J,m=B8,(B8);while(f8)do if G8~=0 then m=function(gP)local uP,aP,AP=0,B8,B8;while uP~=3 do if not(uP<=0)then if uP==1 then for DX=1,aP,7997 do local vX,uX,EX=1,B8,B8;do repeat if not(vX<=0)then if vX~=1 then do if uX>aP then do uX=aP;end;end;end;vX=0;else do uX=DX+7997-1;end;do vX=2;end;end;else EX={w(A,R+DX-1,R+uX-1)};break;end;until(i8);end;for y3=1,#EX do for Q2=0,1 do if Q2~=0 then do M=(gP*M+229)%256;end;else EX[y3]=d(EX[y3],M);end;end;end;AP=AP..S(H(EX));end;uP=3;else AP=s8;uP=1;end;else aP=e();uP=2;end;end;R=R+aP;return AP;end;break;else do J=function(Jb)local Hb,eb,qb=0,B8,B8;while Hb<2 do if Hb~=0 then qb=d(eb[1],h);Hb=2;else do eb={w(A,R,R+3)};end;Hb=1;end;end;local sb=(d(eb[2],h));local jb=(d(eb[3],h));local Sb=d(eb[4],h);do Hb=0;end;repeat if not(Hb<=0)then do if Hb~=1 then return Sb*16777216+jb*65536+sb*256+qb;else R=R+4;Hb=2;end;end;else h=(P8*h+Jb)%256;Hb=1;end;until(i8);end;end;G8=1;end;end;M=D();h=D();G8=5;local Y,v,k,r,Z8=B8,B8,B8,B8,(B8);while G8~=7 do if not(G8<=2)then if G8<=4 then if G8~=3 then do G8=7;end;else for hN=1,D()do local GN=({});(Y)[hN-1]=GN;do for Zr=1,D()do local fr=D();local Pr=((Zr-1)*2);for pD=0,1 do if pD~=0 then(GN)[Pr+1]=f(4,fr,4);else GN[Pr]=f(0,fr,4);end;end;end;end;end;do G8=6;end;end;else do if G8~=5 then v=function(...)return F(J8,...),{...};end;do G8=2;end;else Y={};G8=3;end;end;end;else if G8<=0 then Z8={};do G8=4;end;else if G8~=1 then k={};do G8=1;end;else r=1;G8=0;end;end;end;end;G8=4;local F8,E8,N8=B8,B8,(B8);while(f8)do if not(G8<=2)then if G8<=3 then return F8(L,N8,B8)(...);else if G8~=4 then k=B8;G8=3;else function F8(Xk,jk,Nk)local Mk=jk[4];local fk,Bk,Jk=jk[2],jk[6],(jk[5]);local Yk,vk=jk[9],jk[1];local uk,Sk=jk[7],jk[8];local dk=z({},{__mode=m8});local ak=(B8);do ak=function(...)local LR=0;local ER,KR=1,{};local oR=(b and b()or e8);local IR=(oR==L and Xk or oR);local SR,OR=v(...);do SR=SR-1;end;for E9=0,SR do do if Jk>E9 then do(KR)[E9]=OR[E9+1];end;else do break;end;end;end;end;do(Z8)[3]=jk;end;(Z8)[1]=KR;if not Mk then do OR=B8;end;elseif not(uk)then else(KR)[Jk]={[Y8]=SR>=Jk and SR-Jk+1 or 0,H(OR,Jk+1,SR+1)};end;if IR==oR then else if not(V)then e8=IR;else V(ak,IR);end;end;local VR,AR,MR,jR=V8(function()do while true do local QM=fk[ER];local KM=QM[1];ER=ER+1;if KM>=57 then if not(KM<86)then if not(KM>=100)then do if KM>=93 then if KM>=96 then if not(KM<98)then if KM==99 then(KR)[QM[3]]=Z8[QM[10]];else KR[QM[3]]=KR[QM[10]]>=KR[QM[5]];end;else if KM~=97 then do if not(not(KR[QM[10]]<=KR[QM[5]]))then else do ER=ER+1;end;end;end;else local K5,z5=Bk[QM[4]],B8;local N5=K5[3];if not(N5>0)then else z5={};for c4=0,N5-1 do local q4=fk[ER];local B4=q4[1];if B4~=60 then(z5)[c4]=Nk[q4[10]];else(z5)[c4]={KR,q4[10]};end;ER=ER+1;end;(T)(dk,z5);end;KR[QM[3]]=F8(IR,K5,z5);end;end;else if not(KM>=94)then do KR[QM[3]]={H({},1,QM[10])};end;else if KM~=95 then if QM[5]==91 then ER=ER-1;fk[ER]={[3]=(QM[3]-215)%Nt,[10]=(QM[10]-Gt)%256,[1]=51};elseif QM[5]~=151 then local FO=(QM[3]);for qJ=FO,FO+(QM[10]-1)do(KR)[qJ]=OR[Jk+(qJ-FO)+1];end;else do ER=ER-1;end;fk[ER]={[10]=(QM[10]-217)%Nt,[1]=63,[3]=(QM[3]-217)%256};end;else do KR[QM[3]]=KR[QM[10]]*KR[QM[5]];end;end;end;end;else if not(KM<89)then if not(KM>=91)then if KM~=90 then if not(KR[QM[10]]<=QM[9])then else ER=ER+1;end;else KR[QM[3]]=QM[7]<KR[QM[5]];end;else if KM~=92 then repeat local yh,uh=dk,KR;if not(#yh>0)then else local ek=({});for wN,jN in K,yh do for CL,lL in K,jN do if not(lL[1]==uh and lL[2]>=0)then else local Tt=lL[2];if not(not ek[Tt])then else ek[Tt]={uh[Tt]};end;do(lL)[1]=ek[Tt];end;lL[2]=1;end;end;end;end;until f8;local xs=QM[3];return i8,xs,xs;else do KR[QM[3]]={};end;end;end;else do if not(KM<87)then if KM~=88 then(KR)[QM[3]]=KR[QM[10]]~=QM[9];else KR[QM[3]][QM[7]]=QM[9];end;else local zk=QM[3];LR=zk+QM[10]-1;KR[zk](H(KR,zk+1,LR));LR=zk-1;end;end;end;end;end;else do if not(KM<107)then if not(KM>=111)then if not(KM>=109)then if KM~=108 then(KR)[QM[3]]=QM[7]^KR[QM[5]];else do KR[QM[3]]=KR[QM[10]]-QM[9];end;end;else do if KM==110 then repeat local m1,K1=dk,KR;if not(#m1>0)then else local iH=({});for I0,J0 in K,m1 do for gy,Dy in K,J0 do if not(Dy[1]==K1 and Dy[2]>=0)then else local bg=Dy[2];if not(not iH[bg])then else(iH)[bg]={K1[bg]};end;do Dy[1]=iH[bg];end;(Dy)[2]=1;end;end;end;end;until f8;do return f8,QM[3],0;end;else for Dn=QM[3],QM[10]do do(KR)[Dn]=B8;end;end;end;end;end;else if not(KM<113)then if KM~=114 then KR[QM[3]]=f8;else KR[QM[3]]=KR[QM[10]]==KR[QM[5]];end;else if KM==112 then do(IR)[QM[6]]=KR[QM[3]];end;else if KR[QM[10]]==KR[QM[5]]then do ER=ER+1;end;end;end;end;end;else do if not(KM<k8)then if not(KM<105)then do if KM~=106 then(KR)[QM[3]]=QM[6];else KR[QM[3]]=q(QM[7],KR[QM[5]]);end;end;else if KM==104 then do if KR[QM[10]]==KR[QM[5]]then else do ER=ER+1;end;end;end;else local pB=(QM[3]);local VB=pB+2;local EB=(pB+1);(KR)[pB]=Z(E(KR[pB]),Zt);KR[EB]=Z(E(KR[EB]),Ft);(KR)[VB]=Z(E(KR[VB]),Et);(KR)[pB]=KR[pB]-KR[VB];ER=QM[4];end;end;else do if not(KM>=r8)then(KR)[QM[3]]=f8;ER=ER+1;else do if KM==102 then if KR[QM[10]]==QM[9]then else ER=ER+1;end;else KR[QM[3]]=QM[7]<QM[9];end;end;end;end;end;end;end;end;end;else do if not(KM>=71)then if not(KM>=64)then if not(KM<60)then do if not(KM>=62)then do if KM==61 then if QM[7]==KR[QM[5]]then else ER=ER+1;end;else if QM[5]~=157 then do KR[QM[3]]=KR[QM[10]];end;else ER=ER-1;fk[ER]={[10]=(QM[10]-129)%256,[1]=13,[3]=(QM[3]-129)%256};end;end;end;else if KM==63 then if QM[5]~=197 then do KR[QM[3]]=-KR[QM[10]];end;else ER=ER-1;(fk)[ER]={[5]=(QM[10]-184)%256,[1]=54,[3]=(QM[3]-184)%256};end;else KR[QM[3]]=y(KR[QM[10]]);end;end;end;else if not(KM<58)then if KM==59 then local HO=KR[QM[10]];local LO=(QM[3]);local UO=KR[QM[5]];(KR)[LO+1]=HO;KR[LO]=HO[UO];else KR[QM[3]]=KR[QM[10]]>=QM[9];end;else if QM[5]==84 then ER=ER-1;(fk)[ER]={[5]=(QM[10]-156)%256,[3]=(QM[3]-156)%256,[1]=77};elseif QM[5]~=160 then repeat local WT,gT,AT=dk,KR,QM[3];if not(#WT>0)then else local VJ={};for RW,IW in K,WT do for tO,IO in K,IW do if IO[1]==gT and IO[2]>=AT then local lU=(IO[2]);if not(not VJ[lU])then else do VJ[lU]={gT[lU]};end;end;(IO)[1]=VJ[lU];IO[2]=1;end;end;end;end;until f8;else ER=ER-1;fk[ER]={[3]=(QM[3]-49)%256,[1]=5,[10]=(QM[10]-49)%256};end;end;end;else do if not(KM>=67)then if KM>=65 then if KM==66 then local FN=(QM[3]);(KR)[FN]=KR[FN](H(KR,FN+1,LR));do LR=FN;end;else do(KR[QM[3]])[KR[QM[10]]]=QM[9];end;end;else KR[QM[3]]=QM[7]^QM[9];end;else do if not(KM>=69)then if KM==68 then(KR)[QM[3]]=O(KR[QM[10]],QM[9]);else local Ae=(QM[3]);(KR)[Ae]=KR[Ae](KR[Ae+1]);LR=Ae;end;else if KM~=70 then do(KR)[QM[3]]=KR[QM[10]]>QM[9];end;else(KR)[QM[3]]=QM[7]>=KR[QM[5]];end;end;end;end;end;end;else if KM>=78 then if not(KM<82)then do if KM<84 then do if KM~=83 then local Qb=QM[3];(KR[Qb])(KR[Qb+1],KR[Qb+2]);do LR=Qb-1;end;else if QM[5]~=v8 then repeat local OG,RG=dk,(KR);if not(#OG>0)then else local A7=({});do for pN,SN in K,OG do for e0,p0 in K,SN do do if not(p0[1]==RG and p0[2]>=0)then else local sX=(p0[2]);if not A7[sX]then(A7)[sX]={RG[sX]};end;(p0)[1]=A7[sX];do p0[2]=1;end;end;end;end;end;end;end;until f8;local eB=(QM[3]);return i8,eB,eB+QM[10]-2;else ER=ER-1;fk[ER]={[1]=54,[3]=(QM[3]-176)%256,[5]=(QM[10]-176)%256};end;end;end;else if KM==85 then(KR)[QM[3]]=KR[QM[10]]<=KR[QM[5]];else local F5=(KR[QM[10]]);if not(not F5)then(KR)[QM[3]]=F5;else do ER=ER+1;end;end;end;end;end;else do if not(KM>=80)then if KM~=79 then do if not(QM[7]<=QM[9])then do ER=ER+1;end;end;end;else KR[QM[3]]=O(KR[QM[10]],KR[QM[5]]);end;else do if KM==81 then(KR)[QM[3]]=QM[7]%QM[9];else KR[QM[3]]=KR[QM[10]]^QM[9];end;end;end;end;end;else if not(KM<74)then if not(KM<76)then if KM~=77 then do if KR[QM[10]]~=QM[9]then else do ER=ER+1;end;end;end;else local op=(QM[3]);local ap,rp=op+2,op+3;local pp=({KR[op](KR[op+1],KR[ap])});for RH=1,QM[5]do do KR[ap+RH]=pp[RH];end;end;local lp=KR[rp];if lp==B8 then ER=ER+1;else KR[ap]=lp;end;end;else if KM==75 then KR[QM[3]]=QM[7]+KR[QM[5]];else(KR)[QM[3]]=P(KR[QM[10]],KR[QM[5]]);end;end;else do if not(KM>=72)then Z8[QM[10]]=KR[QM[3]];else if KM==73 then do(KR)[QM[3]]=q(KR[QM[10]],KR[QM[5]]);end;else local MS=QM[10];local NS=QM[3];local RS=(QM[5]);if MS==0 then else LR=NS+MS-1;end;local fS,pS=B8,B8;if MS==1 then fS,pS=v(KR[NS]());else fS,pS=v(KR[NS](H(KR,NS+1,LR)));end;if RS==1 then LR=NS-1;else if RS==0 then fS=fS+NS-1;do LR=fS;end;else fS=NS+RS-2;LR=fS+1;end;local Kl=0;do for Ay=NS,fS do do Kl=Kl+1;end;KR[Ay]=pS[Kl];end;end;end;end;end;end;end;end;end;end;end;else do if KM<28 then if KM<14 then if not(KM<7)then do if KM<10 then if not(KM>=8)then do KR[QM[3]]=KR[QM[10]]~=KR[QM[5]];end;else if KM~=9 then(KR)[QM[3]]=KR[QM[10]]-KR[QM[5]];else local QI,yI=QM[3],((QM[5]-1)*50);for xR=1,LR-QI do do KR[QI][yI+xR]=KR[QI+xR];end;end;end;end;else if not(KM<12)then if KM==13 then repeat local qe,Ce=dk,(KR);if not(#qe>0)then else local Xt=({});do for wl,Ol in K,qe do for ud,md in K,Ol do if not(md[1]==Ce and md[2]>=0)then else local du=(md[2]);if not(not Xt[du])then else Xt[du]={Ce[du]};end;(md)[1]=Xt[du];md[2]=1;end;end;end;end;end;until f8;return;else(KR)[QM[3]]=QM[6];end;else if KM~=11 then(KR)[QM[3]]=P(KR[QM[10]],QM[9]);else do(KR[QM[3]])[KR[QM[10]]]=KR[QM[5]];end;end;end;end;end;else do if not(KM<3)then do if not(KM>=5)then if KM~=4 then do if QM[5]~=40 then do KR[QM[3]]=OR[Jk+1];end;else ER=ER-1;(fk)[ER]={[3]=(QM[3]-at)%256,[10]=(QM[10]-222)%256,[1]=53};end;end;else local z3=(KR[QM[10]]/QM[9]);KR[QM[3]]=z3-z3%1;end;else if KM~=6 then KR[QM[3]]=B8;else(KR)[QM[3]]=KR[QM[10]]%QM[9];end;end;end;else if not(KM<1)then if KM~=2 then local Ls=(QM[3]);(KR)[Ls]=KR[Ls](KR[Ls+1],KR[Ls+2]);do LR=Ls;end;else(KR)[QM[3]]=KR[QM[10]]+KR[QM[5]];end;else do if QM[7]==QM[9]then else ER=ER+1;end;end;end;end;end;end;else if not(KM>=21)then if not(KM>=17)then do if KM<15 then do(KR)[QM[3]]=KR[QM[10]]<KR[QM[5]];end;else if KM~=16 then local cm=(QM[3]);(KR[cm])(H(KR,cm+1,LR));LR=cm-1;else local kQ=QM[3];KR[kQ](KR[kQ+1]);LR=kQ-1;end;end;end;else if KM<19 then if KM~=18 then(KR)[QM[3]]=KR[QM[10]]+QM[9];else do(KR)[QM[3]]=KR[QM[10]]%KR[QM[5]];end;end;else if KM~=20 then KR[QM[3]]=QM[7]*QM[9];else LR=QM[3];do KR[LR]=KR[LR]();end;end;end;end;else if not(KM>=24)then do if KM>=22 then do if KM==23 then(KR[QM[3]])[QM[7]]=KR[QM[5]];else do KR[QM[3]]=P(QM[7],QM[9]);end;end;end;else ER=QM[4];end;end;else if not(KM<26)then if KM~=27 then(KR)[QM[3]]=KR[QM[10]][QM[9]];else(KR)[QM[3]]=O(QM[7],KR[QM[5]]);end;else if KM==25 then local I4=QM[7]/QM[9];do(KR)[QM[3]]=I4-I4%1;end;else KR[QM[3]]=KR[QM[10]]/QM[9];end;end;end;end;end;else if not(KM<42)then if not(KM<49)then if not(KM>=53)then if not(KM<51)then do if KM==52 then do KR[QM[3]]=d(KR[QM[10]],KR[QM[5]]);end;else repeat local mg,Ng=dk,(KR);do if not(#mg>0)then else local su=({});do for MB,bB in K,mg do for Xj,pj in K,bB do if not(pj[1]==Ng and pj[2]>=0)then else local ZE=pj[2];if not su[ZE]then(su)[ZE]={Ng[ZE]};end;(pj)[1]=su[ZE];pj[2]=1;end;end;end;end;end;end;until f8;return i8,QM[3],LR;end;end;else if KM~=50 then repeat local pV,CV=dk,KR;if not(#pV>0)then else local bU=({});for Pc,yc in K,pV do for gM,xM in K,yc do if not(xM[1]==CV and xM[2]>=0)then else local DU=(xM[2]);if not(not bU[DU])then else(bU)[DU]={CV[DU]};end;xM[1]=bU[DU];(xM)[2]=1;end;end;end;end;until f8;return f8,QM[3],1;else(KR)[QM[3]]=KR[QM[10]]>KR[QM[5]];end;end;else if KM<55 then if KM==54 then do if not(not KR[QM[3]])then else do ER=ER+1;end;end;end;else if QM[5]~=68 then KR[QM[3]]=not KR[QM[10]];else ER=ER-1;do(fk)[ER]={[10]=(QM[10]-198)%256,[1]=60,[3]=(QM[3]-198)%256};end;end;end;else if KM~=56 then local hw,pw=QM[3],((QM[5]-1)*50);for kQ=1,QM[10]do do KR[hw][pw+kQ]=KR[hw+kQ];end;end;else(KR)[QM[3]]=i8;end;end;end;else do if not(KM>=45)then if not(KM>=43)then local GV=(QM[10]);(KR)[QM[3]]=KR[GV]..KR[GV+1];else if KM==44 then(KR)[QM[3]]=QM[7]==QM[9];else(KR)[QM[3]]=KR[QM[10]]^KR[QM[5]];end;end;else if not(KM<47)then if KM==48 then if QM[5]~=233 then KR[QM[3]]=#KR[QM[10]];else do ER=ER-1;end;(fk)[ER]={[3]=(QM[3]-182)%256,[1]=53,[10]=(QM[10]-182)%256};end;else if QM[5]==65 then ER=ER-1;fk[ER]={[10]=(QM[10]-207)%256,[3]=(QM[3]-It)%256,[1]=48};else local rB,VB=QM[3],(SR-Jk);if not(VB<0)then else do VB=-1;end;end;for CW=rB,rB+VB do KR[CW]=OR[Jk+(CW-rB)+1];end;do LR=rB+VB;end;end;end;else do if KM~=46 then local HT=Nk[QM[10]];KR[QM[3]]=HT[1][HT[2]];else local Fw=QM[10];local xw=KR[Fw];do for tw=Fw+1,QM[5]do xw=xw..KR[tw];end;end;(KR)[QM[3]]=xw;end;end;end;end;end;end;else if not(KM<35)then do if not(KM>=38)then if KM>=36 then if KM~=37 then KR[QM[3]]=KR[QM[10]]/KR[QM[5]];else do if not(QM[7]<=KR[QM[5]])then ER=ER+1;end;end;end;else(KR)[QM[3]]=c(KR[QM[10]],KR[QM[5]]);end;else do if KM<40 then if KM==39 then KR[QM[3]]=QM[7]~=QM[9];else do if QM[10]~=242 then if not(KR[QM[3]])then else ER=ER+1;end;else ER=ER-1;(fk)[ER]={[3]=(QM[3]-75)%256,[10]=(QM[5]-75)%256,[1]=51};end;end;end;else do if KM==41 then do(KR)[QM[3]]=QM[7]>=QM[9];end;else(KR)[QM[3]]=KR[QM[10]][KR[QM[5]]];end;end;end;end;end;end;else if KM<31 then if KM>=29 then if KM==30 then local zn=(Nk[QM[10]]);(zn[1])[zn[2]]=KR[QM[3]];else KR[QM[3]]=KR[QM[10]]==QM[9];end;else local xJ=(QM[3]);local vJ=KR[xJ+2];local AJ=KR[xJ]+vJ;do(KR)[xJ]=AJ;end;do if not(vJ>0)then if not(AJ>=KR[xJ+1])then else ER=QM[4];KR[xJ+3]=AJ;end;else if not(AJ<=KR[xJ+1])then else do ER=QM[4];end;do KR[xJ+3]=AJ;end;end;end;end;end;else do if KM>=33 then if KM==34 then KR[QM[3]]=IR[QM[6]];else local fP=QM[3];local cP=(QM[10]);LR=fP+cP-1;do repeat local pf,Lf=dk,(KR);do if not(#pf>0)then else local Dj={};for H0,e0 in K,pf do for cW,eW in K,e0 do do if eW[1]==Lf and eW[2]>=0 then local kU=(eW[2]);if not Dj[kU]then Dj[kU]={Lf[kU]};end;(eW)[1]=Dj[kU];(eW)[2]=1;end;end;end;end;end;end;until f8;end;return f8,fP,cP;end;else do if KM~=32 then LR=QM[3];KR[LR]();LR=LR-1;else local Ho,Wo=QM[3],(KR[QM[10]]);do(KR)[Ho+1]=Wo;end;(KR)[Ho]=Wo[QM[9]];end;end;end;end;end;end;end;end;end;end;end;end;end);if not(VR)then do if G(AR)~=xt then(I)(AR,0);else do if not(C(AR,wt))then else return coroutine.yield();end;end;if not(C(AR,"^.-:%d+: "))then I(AR,0);else(I)("Luraph Script:"..(vk[ER-1]or"(internal)")..": "..a(AR),0);end;end;end;else if AR then if jR~=1 then return KR[MR](H(KR,MR+1,LR));else do return KR[MR]();end;end;elseif not(MR)then else return H(KR,MR,jR);end;end;end;end;if V then V(ak,Xk);end;do return ak;end;end;G8=2;end;end;else if not(G8<=0)then if G8~=1 then function E8()local Gg=(B8);local ug=(1);do while ug<2 do if ug~=0 then ug=0;else Gg={{},{},B8,B8,B8,{},B8,B8,B8};ug=2;end;end;end;local xg,eg={},({});do ug=9;end;local ag,zg,hg=B8,B8,B8;do repeat if not(ug<=4)then if not(ug<=6)then if not(ug<=7)then if ug~=8 then do ag=1;end;ug=6;else do zg=e();end;ug=5;end;else do Gg[5]=D();end;ug=3;end;else do if ug~=5 then(Gg)[12]=D();ug=0;else for vf=1,zg do local tf,Vf,Af,yf=3,B8,B8,B8;while tf<=3 do if not(tf<=1)then if tf~=2 then Vf=e();tf=1;else for u3=Vf,Af do do Gg[1][u3]=yf;end;end;tf=4;end;else if tf==0 then do yf=e();end;do tf=2;end;else Af=e();do tf=0;end;end;end;end;end;ug=4;end;end;end;else if ug<=1 then if ug~=0 then hg=e()-133704;ug=10;else Gg[19]=e();do ug=2;end;end;else if not(ug<=2)then do if ug~=3 then(Gg)[14]=e();ug=1;else do Gg[17]=D();end;ug=8;end;end;else(Gg)[14]=D();do ug=7;end;end;end;end;until ug>9;end;local Pg=D();for iW=1,hg do local LW={B8,B8,B8,B8,B8,B8,B8,B8,B8,B8};local dW=J(Pg);local SW=(2);while SW~=12 do if not(SW<=5)then do if not(SW<=8)then if not(SW<=9)then if SW~=10 then(LW)[1]=D();SW=6;else do(LW)[12]=f(17,dW,30);end;SW=12;end;else do LW[1]=D();end;SW=4;end;else if not(SW<=6)then do if SW==7 then do(LW)[13]=f(23,dW,25);end;SW=8;else(LW)[5]=f(23,dW,9);SW=4;end;end;else LW[14]=f(30,dW,17);do SW=10;end;end;end;end;else if not(SW<=2)then if not(SW<=3)then if SW~=4 then(LW)[18]=f(3,dW,14);SW=3;else LW[4]=f(14,dW,18);SW=11;end;else do LW[10]=f(14,dW,9);end;SW=7;end;else do if not(SW<=0)then if SW==1 then(LW)[10]=f(14,dW,9);do SW=3;end;else do LW[3]=f(6,dW,8);end;SW=5;end;else(LW)[13]=f(23,dW,25);SW=8;end;end;end;end;end;(Gg[2])[iW]=LW;end;ug=1;while ug<3 do if not(ug<=0)then do if ug~=1 then Gg[9]=D();ug=3;else Gg[8]=D();ug=0;end;end;else(Gg)[11]=e();ug=2;end;end;ug=4;local yg,Bg=B8,(B8);while ug~=8 do if not(ug<=3)then if not(ug<=5)then if ug==6 then(Gg)[16]=D();do ug=0;end;else(Gg)[4]=f(1,yg,1)~=0;do ug=3;end;end;else if ug~=4 then(Gg)[3]=D();ug=6;else yg=D();ug=7;end;end;else if not(ug<=1)then do if ug~=2 then Gg[7]=f(2,yg,1)~=0;ug=5;else(Gg)[16]=e();do ug=8;end;end;end;else if ug~=0 then for lF=1,Bg do Gg[6][lF-1]=E8();end;ug=2;else Bg=e();do ug=1;end;end;end;end;end;do ug=0;end;local gg=B8;repeat if ug~=0 then gg=e()-133727;ug=2;else Gg[11]=e();ug=1;end;until ug==2;local Yg=(D());local Qg=D()~=0;for Iy=1,gg do local Sy=B8;local Ay=D();local Ty=(0);while Ty<2 do if Ty~=0 then if Ay==229 then do Sy=o();end;elseif Ay==99 then do Sy=a8(m(Yg),4);end;elseif Ay==33 then Sy=f8;elseif Ay==132 then Sy=a8(m(Yg),p()+e());elseif Ay==251 then Sy=p();elseif Ay==207 then Sy=e();elseif Ay==110 then Sy=o();elseif Ay==30 then Sy=a8(m(Yg),4);elseif Ay==12 then Sy=i8;elseif Ay==125 then Sy=a8(m(Yg),D());elseif Ay~=60 then else do Sy=p();end;end;do Ty=0;end;else do if Ay==229 then Sy=o();elseif Ay==99 then Sy=a8(m(Yg),4);elseif Ay==33 then Sy=f8;elseif Ay==132 then Sy=a8(m(Yg),p()+e());elseif Ay==251 then Sy=p();elseif Ay==207 then do Sy=e();end;elseif Ay==110 then Sy=o();elseif Ay==30 then Sy=a8(m(Yg),4);elseif Ay==12 then Sy=i8;elseif Ay==125 then do Sy=a8(m(Yg),D());end;elseif Ay~=60 then else do Sy=p();end;end;end;Ty=2;end;end;local Zy=B8;for IQ=0,3 do do if not(IQ<=1)then do if IQ~=2 then do ag=ag+1;end;else eg[ag]=Zy;end;end;else if IQ~=0 then Zy={Sy,{}};else(xg)[Iy-1]=ag;end;end;end;end;if not(Qg)then else local LG=0;while(f8)do if LG~=0 then r=r+1;do break;end;else k[r]=Zy;LG=1;end;end;end;end;local Ig=(Y[Gg[8]]);for Ut=0,1 do do if Ut==0 then for Fj=1,hg do local hj=5;local Nj,Wj,Kj=B8,B8,B8;do repeat if not(hj<=2)then if not(hj<=4)then if hj~=5 then Kj=Wj==12;hj=1;else Nj=Gg[2][Fj];hj=4;end;else if hj~=3 then Wj=Ig[Nj[1]];hj=6;else if not((Wj==10 or Kj)and Nj[10]>255)then else do(Nj)[8]=f8;end;local bJ=B8;local LJ,WJ=xg[Nj[10]-256],0;while WJ<=1 do if WJ~=0 then if not(bJ)then else local UL=(B8);for Fh=0,2 do do if not(Fh<=0)then if Fh~=1 then do UL[#UL+1]={Nj,7};end;else UL=bJ[2];end;else Nj[7]=bJ[1];end;end;end;end;WJ=2;else bJ=eg[LJ];do WJ=1;end;end;end;end;do hj=7;end;end;end;else if not(hj<=0)then if hj~=1 then if Wj~=11 then else local pG=2;local KG,IG=B8,B8;repeat do if pG<=0 then if not(IG)then else local f7=B8;local H7=0;while(f8)do if H7<=0 then Nj[6]=IG[1];do H7=2;end;else if H7==1 then f7[#f7+1]={Nj,6};break;else do f7=IG[2];end;H7=1;end;end;end;end;do pG=3;end;else if pG==1 then IG=eg[KG];pG=0;else KG=xg[Nj[4]];pG=1;end;end;end;until pG==3;end;hj=0;else if Wj~=14 then else Nj[4]=Fj+(Nj[4]-131071)+1;end;hj=2;end;else if not((Wj==1 or Kj)and Nj[5]>255)then else local tg,Dg=B8,(B8);local rg=(3);repeat do if not(rg<=1)then if rg~=2 then(Nj)[2]=f8;do rg=1;end;else do Dg=eg[tg];end;rg=0;end;else do if rg~=0 then tg=xg[Nj[5]-256];rg=2;else if not(Dg)then else local MY=0;local QY=B8;do while MY<=2 do if MY<=0 then Nj[9]=Dg[1];MY=1;else do if MY~=1 then(QY)[#QY+1]={Nj,9};MY=3;else QY=Dg[2];MY=2;end;end;end;end;end;end;rg=4;end;end;end;end;until rg==4;end;hj=3;end;end;until hj>=7;end;end;else return Gg;end;end;end;end;G8=0;else Z8[2]=k;G8=5;end;else N8=E8();G8=1;end;end;end;end)(bit,"\98\121\116\101","\97\116\116\101\109\112\116\32\116\111\32\121\105\101\108\100\32\97\99\114\111\115\115\32\109\101\116\97\109\101\116\104\111\100\47\67\37\45\99\97\108\108\32\98\111\117\110\100\97\114\121",tostring,"\98\111\114","\117\110\112\97\99\107","\96\102\111\114\96\32\108\105\109\105\116\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114","\118",error,103,256,"\46\46",101,222,setfenv,string.sub,bit32,"\103\115\117\98",type,next,unpack,"\110","\98\110\111\116",nil,241,rawset,"\115\116\114\105\110\103",rawgetsetmetatable,186,getfenv,pcall,false,"\96\102\111\114\96\32\115\116\101\112\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114","",select,"\108\115\104\105\102\116",table.insert,true,"\35",1023,207,tonumber,"\98\120\111\114","\109\97\116\99\104","\114\115\104\105\102\116",assert,"\114\101\112",string.char,string,"\98\97\110\100","\96\102\111\114\96\32\105\110\105\116\105\97\108\32\118\97\108\117\101\32\109\117\115\116\32\98\101\32\97\32\110\117\109\98\101\114",_ENV,215,table,...);